diff --git a/dom/base/Makefile.in b/dom/base/Makefile.in
--- a/dom/base/Makefile.in
+++ b/dom/base/Makefile.in
@@ -104,14 +104,19 @@ CPPSRCS =			\
 	$(NULL)
 
 include $(topsrcdir)/dom/dom-config.mk
 
 ifdef MOZ_JSDEBUGGER
 DEFINES += -DMOZ_JSDEBUGGER
 endif
 
+ifdef MOZ_IPC
+include $(topsrcdir)/config/config.mk
+include $(topsrcdir)/ipc/chromium/chromium-config.mk
+endif
+
 include $(topsrcdir)/config/rules.mk
 
 ifdef MOZ_X11
 CXXFLAGS += $(TK_CFLAGS)
 LDFLAGS += $(TK_LIBS)
 endif
diff --git a/dom/base/nsGlobalWindow.cpp b/dom/base/nsGlobalWindow.cpp
--- a/dom/base/nsGlobalWindow.cpp
+++ b/dom/base/nsGlobalWindow.cpp
@@ -40,16 +40,20 @@
  * use your version of this file under the terms of the MPL, indicate your
  * decision by deleting the provisions above and replace them with the notice
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
+#ifdef MOZ_IPC
+#include "base/basictypes.h"
+#endif
+
 // Local Includes
 #include "nsGlobalWindow.h"
 #include "nsScreen.h"
 #include "nsHistory.h"
 #include "nsBarProps.h"
 #include "nsDOMStorage.h"
 #include "nsDOMOfflineResourceList.h"
 #include "nsDOMError.h"
diff --git a/dom/interfaces/base/Makefile.in b/dom/interfaces/base/Makefile.in
--- a/dom/interfaces/base/Makefile.in
+++ b/dom/interfaces/base/Makefile.in
@@ -76,11 +76,12 @@ XPIDLSRCS =					\
 	nsIDOMJSWindow.idl			\
 	nsIDOMModalContentWindow.idl		\
 	nsIDOMChromeWindow.idl			\
 	nsIDOMNSFeatureFactory.idl		\
         nsIDOMClientRect.idl			\
         nsIDOMClientRectList.idl		\
 	nsIFocusManager.idl			\
 	nsIQueryContentEventResult.idl		\
+	nsITabChild.idl                         \
 	$(NULL)
 
 include $(topsrcdir)/config/rules.mk
diff --git a/dom/interfaces/geolocation/nsIGeolocationProvider.idl b/dom/interfaces/geolocation/nsIGeolocationProvider.idl
--- a/dom/interfaces/geolocation/nsIGeolocationProvider.idl
+++ b/dom/interfaces/geolocation/nsIGeolocationProvider.idl
@@ -35,30 +35,33 @@
  * ***** END LICENSE BLOCK ***** */
 
 
 
 #include "nsISupports.idl"
 
 interface nsIURI;
 interface nsIDOMWindow;
+interface nsIDOMElement;
 interface nsIDOMGeoPosition;
 interface nsIGeolocationPrompt;
 
 /**
  * Interface allows access to a geolocation and is passed to
  * the nsIGeolocationPrompt so that the application can approve
  * or deny the request.
  */
 [scriptable, function, uuid(F2AEFDE1-8E38-48B3-BBB8-BD6C4AE1AC8A)]
 interface nsIGeolocationRequest : nsISupports {
 
   readonly attribute nsIURI requestingURI;
   readonly attribute nsIDOMWindow requestingWindow;
 
+  readonly attribute nsIDOMElement requestingElement;
+
   void cancel();
   void allow();
 };
 
 /**
  * Interface provides a way for the application to handle
  * the UI prompts associated with geo position.
  */
diff --git a/dom/ipc/Makefile.in b/dom/ipc/Makefile.in
--- a/dom/ipc/Makefile.in
+++ b/dom/ipc/Makefile.in
@@ -72,12 +72,13 @@ CPPSRCS = \
 
 include $(topsrcdir)/config/config.mk
 include $(topsrcdir)/ipc/chromium/chromium-config.mk
 include $(topsrcdir)/config/rules.mk
 
 LOCAL_INCLUDES += \
 		-I$(srcdir)/../../content/base/src \
 		-I$(srcdir)/../../content/events/src \
+		-I$(srcdir)/../src/geolocation \
 		-I$(topsrcdir)/chrome/src \
 		$(NULL)
 
 DEFINES += -DBIN_SUFFIX='"$(BIN_SUFFIX)"'
diff --git a/dom/ipc/PIFrameEmbedding.ipdl b/dom/ipc/PIFrameEmbedding.ipdl
--- a/dom/ipc/PIFrameEmbedding.ipdl
+++ b/dom/ipc/PIFrameEmbedding.ipdl
@@ -37,34 +37,38 @@
  *
  * ***** END LICENSE BLOCK ***** */
 
 include protocol PContentProcess;
 include protocol PDocumentRenderer;
 include protocol PDocumentRendererShmem;
 include protocol PObjectWrapper;
 include protocol PContextWrapper;
+include protocol PGeolocationRequest;
 
 include "mozilla/TabTypes.h";
 include "TabMessageUtils.h";
 include "gfxMatrix.h";
+include "mozilla/net/NeckoMessageUtils.h";
 
+using IPC::URI;
 using MagicWindowHandle;
 using RemoteDOMEvent;
 using gfxMatrix;
 
 namespace mozilla {
 namespace dom {
 
 rpc protocol PIFrameEmbedding
 {
     manager PContentProcess;
     manages PDocumentRenderer;
     manages PDocumentRendererShmem;
     manages PContextWrapper;
+    manages PGeolocationRequest;
 
 child:
     __delete__();
 
 parent:
     /**
      * When child sends this message, parent should move focus to
      * the next or previous focusable element.
@@ -94,16 +98,19 @@ parent:
     rpc createWindow() returns (PIFrameEmbedding window);
 
     PContextWrapper();
 
     rpc sendSyncMessageToParent(nsString aMessage, nsString aJSON, PObjectWrapper[] aObjects)
       returns (nsString[] retval);
 
     sendAsyncMessageToParent(nsString aMessage, nsString aJSON);
+
+    PGeolocationRequest(URI uri);
+
 child:
     createWidget(MagicWindowHandle parentWidget);
 
     loadURL(nsCString uri);
 
     move(PRUint32 x,
          PRUint32 y,
          PRUint32 width,
diff --git a/dom/ipc/TabChild.cpp b/dom/ipc/TabChild.cpp
--- a/dom/ipc/TabChild.cpp
+++ b/dom/ipc/TabChild.cpp
@@ -132,21 +132,22 @@ TabChild::Init()
   mWebNav = do_QueryInterface(webBrowser);
   NS_ASSERTION(mWebNav, "nsWebBrowser doesn't implement nsIWebNavigation?");
 
   nsCOMPtr<nsIDocShellTreeItem> docShellItem(do_QueryInterface(mWebNav));
   docShellItem->SetItemType(nsIDocShellTreeItem::typeContentWrapper);
   return NS_OK;
 }
 
-NS_IMPL_ISUPPORTS10(TabChild, nsIWebBrowserChrome, nsIWebBrowserChrome2,
+NS_IMPL_ISUPPORTS11(TabChild, nsIWebBrowserChrome, nsIWebBrowserChrome2,
                     nsIEmbeddingSiteWindow, nsIEmbeddingSiteWindow2,
                     nsIWebBrowserChromeFocus, nsIInterfaceRequestor,
                     nsIWindowProvider, nsIWebProgressListener,
-                    nsIWebProgressListener2, nsSupportsWeakReference)
+                    nsIWebProgressListener2, nsSupportsWeakReference,
+                    nsITabChild)
 
 NS_IMETHODIMP
 TabChild::SetStatus(PRUint32 aStatusType, const PRUnichar* aStatus)
 {
   return NS_ERROR_NOT_IMPLEMENTED;
 }
 
 NS_IMETHODIMP
@@ -664,16 +665,32 @@ TabChild::RecvPDocumentRendererShmemCons
 
     dirtyArea = aMatrix.Transform(dirtyArea);
 
     return PDocumentRendererShmemChild::Send__delete__(__a, dirtyArea.X(), dirtyArea.Y(), 
                                                        dirtyArea.Width(), dirtyArea.Height(),
                                                        aBuf);
 }
 
+/* The PGeolocationRequestChild actor is implemented by a refcounted
+   nsGeolocationRequest, and has an identical lifetime. */
+
+PGeolocationRequestChild*
+TabChild::AllocPGeolocationRequest(const IPC::URI&)
+{
+  NS_RUNTIMEABORT("unused");
+  return nsnull;
+}
+
+bool
+TabChild::DeallocPGeolocationRequest(PGeolocationRequestChild* actor)
+{
+  return true;
+}
+
 bool
 TabChild::RecvactivateFrameEvent(const nsString& aType, const bool& capture)
 {
   nsCOMPtr<nsPIDOMWindow> window = do_GetInterface(mWebNav);
   NS_ENSURE_TRUE(window, true);
   nsCOMPtr<nsIDOMEventTarget> chromeHandler =
     do_QueryInterface(window->GetChromeEventHandler());
   NS_ENSURE_TRUE(chromeHandler, true);
diff --git a/dom/ipc/TabChild.h b/dom/ipc/TabChild.h
--- a/dom/ipc/TabChild.h
+++ b/dom/ipc/TabChild.h
@@ -63,16 +63,17 @@
 #include "nsNetUtil.h"
 #include "nsFrameMessageManager.h"
 #include "nsIScriptContext.h"
 #include "nsDOMEventTargetHelper.h"
 #include "nsIPrincipal.h"
 #include "nsIScriptObjectPrincipal.h"
 #include "nsIScriptContext.h"
 #include "nsWeakReference.h"
+#include "nsITabChild.h"
 
 class gfxMatrix;
 
 namespace mozilla {
 
 namespace jsipc {
 class PContextWrapperChild;
 class ContextWrapperChild;
@@ -143,17 +144,18 @@ protected:
 
 class TabChild : public PIFrameEmbeddingChild,
                  public nsIWebProgressListener2,
                  public nsIWebBrowserChrome2,
                  public nsIEmbeddingSiteWindow2,
                  public nsIWebBrowserChromeFocus,
                  public nsIInterfaceRequestor,
                  public nsIWindowProvider,
-                 public nsSupportsWeakReference
+                 public nsSupportsWeakReference,
+                 public nsITabChild
 {
 public:
     TabChild();
     virtual ~TabChild();
     bool destroyWidget();
     nsresult Init();
 
     NS_DECL_ISUPPORTS
@@ -231,16 +233,19 @@ public:
             const nsString& bgcolor,
             const PRUint32& flags,
             const bool& flush,
             const gfxMatrix& aMatrix,
             const PRInt32& aBufW,
             const PRInt32& aBufH,
             Shmem& aBuf);
 
+    virtual PGeolocationRequestChild* AllocPGeolocationRequest(const IPC::URI& uri);
+    virtual bool DeallocPGeolocationRequest(PGeolocationRequestChild* actor);
+
     nsIWebNavigation* WebNavigation() { return mWebNav; }
 
     JSContext* GetJSContext() { return mCx; }
 
     nsIPrincipal* GetPrincipal() { return mPrincipal; }
 
     virtual PContextWrapperChild* AllocPContextWrapper();
     virtual bool DeallocPContextWrapper(PContextWrapperChild* actor);
diff --git a/dom/ipc/TabParent.cpp b/dom/ipc/TabParent.cpp
--- a/dom/ipc/TabParent.cpp
+++ b/dom/ipc/TabParent.cpp
@@ -52,16 +52,18 @@
 #include "nsIDOMEventTarget.h"
 #include "nsIDOMEvent.h"
 #include "nsIPrivateDOMEvent.h"
 #include "nsIWebProgressListener2.h"
 #include "nsFrameLoader.h"
 #include "nsNetUtil.h"
 #include "jsarray.h"
 #include "nsContentUtils.h"
+#include "nsGeolocationOOP.h"
+#include "nsIDOMNSHTMLFrameElement.h"
 
 using mozilla::ipc::DocumentRendererParent;
 using mozilla::ipc::DocumentRendererShmemParent;
 using mozilla::dom::ContentProcessParent;
 using mozilla::jsipc::PContextWrapperParent;
 using mozilla::jsipc::ContextWrapperParent;
 
 // The flags passed by the webProgress notifications are 16 bits shifted
@@ -444,16 +446,29 @@ TabParent::AllocPContextWrapper()
 
 bool
 TabParent::DeallocPContextWrapper(PContextWrapperParent* actor)
 {
     delete actor;
     return true;
 }
 
+PGeolocationRequestParent*
+TabParent::AllocPGeolocationRequest(const URI::URI& uri)
+{
+  return new GeolocationRequestParent(mFrameElement, uri);
+}
+  
+bool
+TabParent::DeallocPGeolocationRequest(PGeolocationRequestParent* actor)
+{
+  delete actor;
+  return true;
+}
+
 JSBool
 TabParent::GetGlobalJSObject(JSContext* cx, JSObject** globalp)
 {
     // TODO Unify this code with TestShellParent::GetGlobalJSObject.
     nsTArray<PContextWrapperParent*> cwps(1);
     ManagedPContextWrapperParent(cwps);
     if (cwps.Length() < 1)
         return JS_FALSE;
diff --git a/dom/ipc/TabParent.h b/dom/ipc/TabParent.h
--- a/dom/ipc/TabParent.h
+++ b/dom/ipc/TabParent.h
@@ -155,16 +155,19 @@ public:
             const PRInt32& bufw,
             const PRInt32& bufh,
             Shmem& buf);
     virtual bool DeallocPDocumentRendererShmem(PDocumentRendererShmemParent* actor);
 
     virtual PContextWrapperParent* AllocPContextWrapper();
     virtual bool DeallocPContextWrapper(PContextWrapperParent* actor);
 
+    virtual PGeolocationRequestParent* AllocPGeolocationRequest(const IPC::URI& uri);
+    virtual bool DeallocPGeolocationRequest(PGeolocationRequestParent* actor);
+
     JSBool GetGlobalJSObject(JSContext* cx, JSObject** globalp);
 
     NS_DECL_ISUPPORTS
     NS_DECL_NSIWEBPROGRESS
 
 protected:
     bool ReceiveMessage(const nsString& aMessage,
                         PRBool aSync,
diff --git a/dom/src/geolocation/Makefile.in b/dom/src/geolocation/Makefile.in
--- a/dom/src/geolocation/Makefile.in
+++ b/dom/src/geolocation/Makefile.in
@@ -54,16 +54,19 @@ CPPSRCS		= \
 		$(NULL)
 
 EXTRA_DSO_LDOPTS = \
 		$(MOZ_COMPONENT_LIBS) \
 		$(NULL)
 
 LOCAL_INCLUDES = \
 		-I$(topsrcdir)/dom/base \
+		-I$(topsrcdir)/dom/ipc \
+		-I$(topsrcdir)/content/base/src \
+		-I$(topsrcdir)/content/events/src \
 		$(NULL)
 
 ifdef WINCE_WINDOWS_MOBILE
 CPPSRCS         += WinMobileLocationProvider.cpp
 endif
 
 ifdef MOZ_MAEMO_LIBLOCATION
 CPPSRCS         += MaemoLocationProvider.cpp
@@ -71,11 +74,13 @@ LOCAL_INCLUDES	+= $(MOZ_PLATFORM_MAEMO_C
 endif
 
 EXTRA_COMPONENTS = \
                  NetworkGeolocationProvider.js \
                  GPSDGeolocationProvider.js \
                  $(NULL)
 
 
+include $(topsrcdir)/config/config.mk
+include $(topsrcdir)/ipc/chromium/chromium-config.mk
 include $(topsrcdir)/config/rules.mk
 
 DEFINES += -D_IMPL_NS_LAYOUT
diff --git a/dom/src/geolocation/PGeolocationRequest.ipdl b/dom/src/geolocation/PGeolocationRequest.ipdl
new file mode 100644
--- /dev/null
+++ b/dom/src/geolocation/PGeolocationRequest.ipdl
@@ -0,0 +1,59 @@
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is mozilla.org code.
+ *
+ * The Initial Developer of the Original Code is
+ *  The Mozilla Foundation
+ * Portions created by the Initial Developer are Copyright (C) 2010
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *  Doug Turner <dougt@mozilla.com>  (Original Author)
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+include protocol PIFrameEmbedding;
+include "mozilla/net/NeckoMessageUtils.h";
+
+using IPC::URI;
+
+namespace mozilla {
+namespace dom {
+
+protocol PGeolocationRequest
+{
+  manager PIFrameEmbedding;
+
+parent:
+  prompt();
+
+child:
+  __delete__(bool allow);
+};
+
+
+} // namespace dom
+} // namespace mozilla
diff --git a/dom/src/geolocation/ipdl.mk b/dom/src/geolocation/ipdl.mk
new file mode 100644
--- /dev/null
+++ b/dom/src/geolocation/ipdl.mk
@@ -0,0 +1,40 @@
+# ***** BEGIN LICENSE BLOCK *****
+# Version: MPL 1.1/GPL 2.0/LGPL 2.1
+#
+# The contents of this file are subject to the Mozilla Public License Version
+# 1.1 (the "License"); you may not use this file except in compliance with
+# the License. You may obtain a copy of the License at
+# http://www.mozilla.org/MPL/
+#
+# Software distributed under the License is distributed on an "AS IS" basis,
+# WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+# for the specific language governing rights and limitations under the
+# License.
+#
+# The Original Code is Geolocation code.
+#
+# The Initial Developer of the Original Code is
+#   the Mozilla Foundation.
+# Portions created by the Initial Developer are Copyright (C) 2010
+# the Initial Developer. All Rights Reserved.
+#
+# Contributor(s):
+#   Josh Matthews <josh@joshmatthews.net> (Initial Developer)
+#
+# Alternatively, the contents of this file may be used under the terms of
+# either the GNU General Public License Version 2 or later (the "GPL"), or
+# the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+# in which case the provisions of the GPL or the LGPL are applicable instead
+# of those above. If you wish to allow use of your version of this file only
+# under the terms of either the GPL or the LGPL, and not to allow others to
+# use your version of this file under the terms of the MPL, indicate your
+# decision by deleting the provisions above and replace them with the notice
+# and other provisions required by the GPL or the LGPL. If you do not delete
+# the provisions above, a recipient may use your version of this file under
+# the terms of any one of the MPL, the GPL or the LGPL.
+#
+# ***** END LICENSE BLOCK *****
+
+IPDLSRCS = \
+	PGeolocationRequest.ipdl \
+	$(NULL)
diff --git a/dom/src/geolocation/nsGeolocation.cpp b/dom/src/geolocation/nsGeolocation.cpp
--- a/dom/src/geolocation/nsGeolocation.cpp
+++ b/dom/src/geolocation/nsGeolocation.cpp
@@ -29,16 +29,37 @@
  * use your version of this file under the terms of the MPL, indicate your
  * decision by deleting the provisions above and replace them with the notice
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
+#ifdef MOZ_IPC
+#include "nsGeolocationOOP.h"
+#include "nsXULAppAPI.h"
+
+#include "mozilla/dom/PIFrameEmbeddingChild.h"
+#include "mozilla/dom/PIFrameEmbeddingParent.h"
+#include "mozilla/dom/ContentProcessChild.h"
+#include "nsNetUtil.h"
+
+#include "nsFrameManager.h"
+#include "nsFrameLoader.h"
+#include "nsIFrameLoader.h"
+
+#include "nsIDocShellTreeOwner.h"
+#include "nsIDocShellTreeItem.h"
+#include "nsIWebProgressListener2.h"
+
+#include "nsDOMEventTargetHelper.h"
+#include "TabChild.h"
+#endif
+
 #include "nsGeolocation.h"
 #include "nsAutoPtr.h"
 #include "nsCOMPtr.h"
 #include "nsIDOMWindow.h"
 #include "nsDOMClassInfo.h"
 #include "nsComponentManagerUtils.h"
 #include "nsICategoryManager.h"
 #include "nsISupportsPrimitives.h"
@@ -226,16 +247,24 @@ nsGeolocationRequest::GetRequestingWindo
 
   nsCOMPtr<nsIDOMWindow> window = do_QueryReferent(mLocator->GetOwner());
   window.forget(aRequestingWindow);
 
   return NS_OK;
 }
 
 NS_IMETHODIMP
+nsGeolocationRequest::GetRequestingElement(nsIDOMElement * *aRequestingElement)
+{
+  NS_ENSURE_ARG_POINTER(aRequestingElement);
+  *aRequestingElement = nsnull;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
 nsGeolocationRequest::Cancel()
 {
   NotifyError(nsIDOMGeoPositionError::PERMISSION_DENIED);
 
   // remove ourselves from the locators callback lists.
   mLocator->RemoveRequest(this);
   return NS_OK;
 }
@@ -335,16 +364,26 @@ nsGeolocationRequest::SendLocation(nsIDO
 void
 nsGeolocationRequest::Shutdown()
 {
   mCleared = PR_TRUE;
   mCallback = nsnull;
   mErrorCallback = nsnull;
 }
 
+#ifdef MOZ_IPC
+bool nsGeolocationRequest::Recv__delete__(const bool& allow)
+{
+  if (allow)
+    (void) Allow();
+  else
+    (void) Cancel();
+  return true;
+}
+#endif
 ////////////////////////////////////////////////////
 // nsGeolocationService
 ////////////////////////////////////////////////////
 NS_INTERFACE_MAP_BEGIN(nsGeolocationService)
   NS_INTERFACE_MAP_ENTRY_AMBIGUOUS(nsISupports, nsIGeolocationUpdate)
   NS_INTERFACE_MAP_ENTRY(nsIGeolocationUpdate)
   NS_INTERFACE_MAP_ENTRY(nsIObserver)
 NS_INTERFACE_MAP_END
@@ -851,22 +890,17 @@ nsGeolocation::GetCurrentPosition(nsIDOM
   nsRefPtr<nsGeolocationRequest> request = new nsGeolocationRequest(this, callback, errorCallback, options);
   if (!request)
     return NS_ERROR_OUT_OF_MEMORY;
 
   if (NS_FAILED(request->Init()))
     return NS_ERROR_FAILURE; // this as OKAY.  not sure why we wouldn't throw. xxx dft
 
   if (mOwner) {
-    nsCOMPtr<nsIGeolocationPrompt> prompt = do_GetService(NS_GEOLOCATION_PROMPT_CONTRACTID);
-    if (prompt == nsnull)
-      return NS_ERROR_NOT_AVAILABLE;
-
-    prompt->Prompt(request);
-
+    RegisterRequestWithPrompt(request);
     mPendingCallbacks.AppendElement(request);
 
     return NS_OK;
   }
 
   if (!nsContentUtils::IsCallerChrome())
     return NS_ERROR_FAILURE;
 
@@ -895,21 +929,17 @@ nsGeolocation::WatchPosition(nsIDOMGeoPo
   nsRefPtr<nsGeolocationRequest> request = new nsGeolocationRequest(this, callback, errorCallback, options);
   if (!request)
     return NS_ERROR_OUT_OF_MEMORY;
 
   if (NS_FAILED(request->Init()))
     return NS_ERROR_FAILURE; // this as OKAY.  not sure why we wouldn't throw. xxx dft
 
   if (mOwner) {
-    nsCOMPtr<nsIGeolocationPrompt> prompt = do_GetService(NS_GEOLOCATION_PROMPT_CONTRACTID);
-    if (prompt == nsnull)
-      return NS_ERROR_NOT_AVAILABLE;
-
-    prompt->Prompt(request);
+    RegisterRequestWithPrompt(request);
 
     // need to hand back an index/reference.
     mWatchingCallbacks.AppendElement(request);
     *_retval = mWatchingCallbacks.Length() - 1;
 
     return NS_OK;
   }
 
@@ -957,12 +987,153 @@ nsGeolocation::WindowOwnerStillExists()
     nsPIDOMWindow* outer = window->GetOuterWindow();
     if (!outer || outer->GetCurrentInnerWindow() != window)
       return PR_FALSE;
   }
 
   return PR_TRUE;
 }
 
+void
+nsGeolocation::RegisterRequestWithPrompt(nsGeolocationRequest* request)
+{
+#ifdef MOZ_IPC
+  if (XRE_GetProcessType() == GeckoProcessType_Content) {
+    nsCOMPtr<nsPIDOMWindow> window = do_QueryReferent(mOwner);
+    if (!window)
+      return;
+
+    nsIDocShell *docshell = window->GetDocShell();
+
+    nsCOMPtr<nsIDocShellTreeItem> item = do_QueryInterface(docshell);
+    NS_ASSERTION(item, "doc shell tree item is null");
+    if (!item)
+      return;
+
+    nsCOMPtr<nsIDocShellTreeOwner> owner;
+    item->GetTreeOwner(getter_AddRefs(owner));
+    NS_ASSERTION(owner, "doc shell tree owner is null");
+    
+    nsCOMPtr<nsITabChild> tabchild = do_GetInterface(owner);
+    if (!tabchild)
+      return;
+
+    // because owner implements nsITabChild, we can assume that it is
+    // the one and only TabChild.
+    mozilla::dom::TabChild* child = static_cast<mozilla::dom::TabChild*>(tabchild.get());
+    
+    mozilla::dom::PGeolocationRequestChild* a = 
+      child->SendPGeolocationRequestConstructor(request, IPC::URI(mURI));
+
+    (void) a->Sendprompt();
+    return;
+  }
+#endif
+
+  nsCOMPtr<nsIGeolocationPrompt> prompt = do_GetService(NS_GEOLOCATION_PROMPT_CONTRACTID);
+  NS_ASSERTION(prompt, "null geolocation prompt.  geolocation will not work without one.");
+  if (prompt)
+    prompt->Prompt(request);
+}
+
 #ifndef WINCE_WINDOWS_MOBILE
 DOMCI_DATA(GeoPositionCoords, void)
 DOMCI_DATA(GeoPosition, void)
 #endif
+
+nsGeolocationRequestProxy::nsGeolocationRequestProxy()
+{
+  MOZ_COUNT_CTOR(nsGeolocationRequestProxy);
+}
+
+nsGeolocationRequestProxy::~nsGeolocationRequestProxy()
+{
+  MOZ_COUNT_DTOR(nsGeolocationRequestProxy);
+}
+
+nsresult
+nsGeolocationRequestProxy::Init(mozilla::dom::GeolocationRequestParent* parent)
+{
+  NS_ASSERTION(parent, "null parent");
+  mParent = parent;
+
+  nsCOMPtr<nsIGeolocationPrompt> prompt = do_GetService(NS_GEOLOCATION_PROMPT_CONTRACTID);
+  NS_ASSERTION(prompt, "null geolocation prompt.  geolocation will not work without one.");
+  if (prompt)
+    prompt->Prompt(this);
+  return NS_OK;
+}
+
+NS_IMPL_ISUPPORTS1(nsGeolocationRequestProxy, nsIGeolocationRequest);
+
+NS_IMETHODIMP
+nsGeolocationRequestProxy::GetRequestingWindow(nsIDOMWindow * *aRequestingWindow)
+{
+  NS_ENSURE_ARG_POINTER(aRequestingWindow);
+  *aRequestingWindow = nsnull;
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsGeolocationRequestProxy::GetRequestingURI(nsIURI * *aRequestingURI)
+{
+  NS_ENSURE_ARG_POINTER(aRequestingURI);
+  NS_ASSERTION(mParent, "No parent for request");
+
+  NS_ADDREF(*aRequestingURI = mParent->mURI);
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsGeolocationRequestProxy::GetRequestingElement(nsIDOMElement * *aRequestingElement)
+{
+  NS_ENSURE_ARG_POINTER(aRequestingElement);
+  NS_ASSERTION(mParent && mParent->mElement.get(), "No parent for request");
+  NS_ADDREF(*aRequestingElement = mParent->mElement);
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsGeolocationRequestProxy::Cancel()
+{
+  NS_ASSERTION(mParent, "No parent for request");
+  (void) mozilla::dom::GeolocationRequestParent::Send__delete__(mParent, false);
+  return NS_OK;
+}
+
+NS_IMETHODIMP
+nsGeolocationRequestProxy::Allow()
+{
+  NS_ASSERTION(mParent, "No parent for request");
+  (void) mozilla::dom::GeolocationRequestParent::Send__delete__(mParent, true);
+  return NS_OK;
+}
+
+namespace mozilla {
+namespace dom {
+
+GeolocationRequestParent::GeolocationRequestParent(nsIDOMElement *element, const IPC::URI& uri)
+{
+  MOZ_COUNT_CTOR(GeolocationRequestParent);
+  
+  mURI       = uri;
+  mElement   = element;
+  mProxy     = nsnull;
+}
+
+GeolocationRequestParent::~GeolocationRequestParent()
+{
+  MOZ_COUNT_DTOR(GeolocationRequestParent);
+  delete mProxy;
+}
+  
+bool
+GeolocationRequestParent::Recvprompt()
+{
+  mProxy = new nsGeolocationRequestProxy();
+  NS_ASSERTION(mProxy, "Alloc of request proxy failed");
+  if (NS_FAILED(mProxy->Init(this)))
+    mProxy->Cancel();
+  return true;
+}
+
+} // namespace dom
+} // namespace mozilla
diff --git a/dom/src/geolocation/nsGeolocation.h b/dom/src/geolocation/nsGeolocation.h
--- a/dom/src/geolocation/nsGeolocation.h
+++ b/dom/src/geolocation/nsGeolocation.h
@@ -29,16 +29,19 @@
  * use your version of this file under the terms of the MPL, indicate your
  * decision by deleting the provisions above and replace them with the notice
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
+#ifdef MOZ_IPC
+#include "mozilla/dom/PGeolocationRequestChild.h"
+#endif
 
 #include "nsCOMPtr.h"
 #include "nsAutoPtr.h"
 #include "nsCOMArray.h"
 #include "nsTArray.h"
 #include "nsITimer.h"
 #include "nsIObserver.h"
 #include "nsIURI.h"
@@ -56,17 +59,22 @@
 
 #include "nsPIDOMWindow.h"
 
 #include "nsIGeolocationProvider.h"
 
 class nsGeolocationService;
 class nsGeolocation;
 
-class nsGeolocationRequest : public nsIGeolocationRequest, public nsITimerCallback
+class nsGeolocationRequest
+ : public nsIGeolocationRequest
+ , public nsITimerCallback
+#ifdef MOZ_IPC
+ , public mozilla::dom::PGeolocationRequestChild
+#endif
 {
  public:
   NS_DECL_CYCLE_COLLECTING_ISUPPORTS
   NS_DECL_NSIGEOLOCATIONREQUEST
   NS_DECL_NSITIMERCALLBACK
 
   NS_DECL_CYCLE_COLLECTION_CLASS_AMBIGUOUS(nsGeolocationRequest, nsIGeolocationRequest)
 
@@ -78,16 +86,20 @@ class nsGeolocationRequest : public nsIG
   void Shutdown();
 
   void SendLocation(nsIDOMGeoPosition* location);
   void MarkCleared();
   PRBool Allowed() {return mAllowed;}
 
   ~nsGeolocationRequest();
 
+#ifdef MOZ_IPC
+  bool Recv__delete__(const bool& allow);
+#endif
+
  private:
 
   void NotifyError(PRInt16 errorCode);
   PRPackedBool mAllowed;
   PRPackedBool mCleared;
   PRPackedBool mHasSentData;
 
   nsCOMPtr<nsITimer> mTimeoutTimer;
@@ -199,16 +211,18 @@ public:
 
   // Check to see if the widnow still exists
   PRBool WindowOwnerStillExists();
 
 private:
 
   ~nsGeolocation();
 
+  void RegisterRequestWithPrompt(nsGeolocationRequest* request);
+
   // Two callback arrays.  The first |mPendingCallbacks| holds objects for only
   // one callback and then they are released/removed from the array.  The second
   // |mWatchingCallbacks| holds objects until the object is explictly removed or
   // there is a page change.
 
   nsTArray<nsRefPtr<nsGeolocationRequest> > mPendingCallbacks;
   nsTArray<nsRefPtr<nsGeolocationRequest> > mWatchingCallbacks;
 
@@ -218,8 +232,9 @@ private:
   nsWeakPtr mOwner;
 
   // where the content was loaded from
   nsCOMPtr<nsIURI> mURI;
 
   // owning back pointer.
   nsRefPtr<nsGeolocationService> mService;
 };
+
diff --git a/dom/src/geolocation/nsGeolocationOOP.h b/dom/src/geolocation/nsGeolocationOOP.h
new file mode 100644
--- /dev/null
+++ b/dom/src/geolocation/nsGeolocationOOP.h
@@ -0,0 +1,87 @@
+/* ***** BEGIN LICENSE BLOCK *****
+ * Version: MPL 1.1/GPL 2.0/LGPL 2.1
+ *
+ * The contents of this file are subject to the Mozilla Public License Version
+ * 1.1 (the "License"); you may not use this file except in compliance with
+ * the License. You may obtain a copy of the License at
+ * http://www.mozilla.org/MPL/
+ *
+ * Software distributed under the License is distributed on an "AS IS" basis,
+ * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
+ * for the specific language governing rights and limitations under the
+ * License.
+ *
+ * The Original Code is mozilla.org code.
+ *
+ * The Initial Developer of the Original Code is
+ *  The Mozilla Foundation
+ * Portions created by the Initial Developer are Copyright (C) 2010
+ * the Initial Developer. All Rights Reserved.
+ *
+ * Contributor(s):
+ *  Doug Turner <dougt@mozilla.com>  (Original Author)
+ *
+ * Alternatively, the contents of this file may be used under the terms of
+ * either the GNU General Public License Version 2 or later (the "GPL"), or
+ * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
+ * in which case the provisions of the GPL or the LGPL are applicable instead
+ * of those above. If you wish to allow use of your version of this file only
+ * under the terms of either the GPL or the LGPL, and not to allow others to
+ * use your version of this file under the terms of the MPL, indicate your
+ * decision by deleting the provisions above and replace them with the notice
+ * and other provisions required by the GPL or the LGPL. If you do not delete
+ * the provisions above, a recipient may use your version of this file under
+ * the terms of any one of the MPL, the GPL or the LGPL.
+ *
+ * ***** END LICENSE BLOCK ***** */
+
+#ifndef nsGeolocationOOP_h
+#define nsGeolocationOOP_h
+
+#include "base/basictypes.h"
+
+#include "nsIGeolocationProvider.h"
+#include "nsString.h"
+#include "nsIDOMElement.h"
+
+#include "mozilla/dom/PGeolocationRequestParent.h"
+
+class nsGeolocationRequestProxy;
+
+namespace mozilla {
+namespace dom {
+
+class GeolocationRequestParent : public PGeolocationRequestParent
+{
+ public:
+  GeolocationRequestParent(nsIDOMElement *element, const IPC::URI& principal);
+  virtual ~GeolocationRequestParent();
+  
+  nsCOMPtr<nsIURI>           mURI;
+  nsCOMPtr<nsIDOMElement>    mElement;
+  nsGeolocationRequestProxy *mProxy;
+
+ private:  
+  virtual bool Recvprompt();
+};
+  
+} // namespace dom                                                                                                                                                                                                                   
+} // namespace mozilla
+
+class nsGeolocationRequestProxy : public nsIGeolocationRequest
+{
+ public:
+  nsGeolocationRequestProxy();
+  virtual ~nsGeolocationRequestProxy();
+  
+  nsresult Init(mozilla::dom::GeolocationRequestParent* parent);
+  
+  NS_DECL_ISUPPORTS;
+  NS_DECL_NSIGEOLOCATIONREQUEST;
+
+ private:
+  // Non-owning pointer to the GeolocationRequestParent object which owns this proxy.
+  mozilla::dom::GeolocationRequestParent* mParent;
+};
+#endif // nsGeolocationOOP_h
+
diff --git a/ipc/ipdl/Makefile.in b/ipc/ipdl/Makefile.in
--- a/ipc/ipdl/Makefile.in
+++ b/ipc/ipdl/Makefile.in
@@ -49,16 +49,17 @@ LIBRARY_NAME = mozipdlgen_s
 FORCE_STATIC_LIB = 1
 LIBXUL_LIBRARY = 1
 EXPORT_LIBRARY = 1
 
 ##-----------------------------------------------------------------------------
 ## When you add IPDL files to a source directory, list the directory here.
 ##
 IPDLDIRS =  \
+  dom/src/geolocation \
   dom/plugins  \
   dom/ipc  \
   netwerk/ipc  \
   netwerk/protocol/http/src  \
   netwerk/protocol/ftp/src  \
   netwerk/cookie/src  \
   ipc/ipdl/test/cxx  \
   ipc/testshell  \
diff --git a/layout/build/Makefile.in b/layout/build/Makefile.in
--- a/layout/build/Makefile.in
+++ b/layout/build/Makefile.in
@@ -232,16 +232,21 @@ ifdef MOZ_SYDNEYAUDIO
 ifeq ($(OS_ARCH),Linux)
 EXTRA_DSO_LDOPTS += $(MOZ_ALSA_LIBS)
 endif
 ifeq ($(OS_ARCH),Darwin)
 OS_LIBS += -framework CoreAudio -framework AudioToolbox -framework AudioUnit -framework Carbon
 endif
 endif
 
+ifdef MOZ_IPC
+include $(topsrcdir)/config/config.mk
+include $(topsrcdir)/ipc/chromium/chromium-config.mk
+endif
+
 include $(topsrcdir)/config/rules.mk
 
 LOCAL_INCLUDES	+= -I$(srcdir)/../base \
 		   -I$(srcdir)/../generic \
 		   -I$(srcdir)/../forms \
 		   -I$(srcdir)/../tables \
 		   -I$(srcdir)/../style \
 		   -I$(srcdir)/../xul/content/src \
diff --git a/layout/build/nsLayoutModule.cpp b/layout/build/nsLayoutModule.cpp
--- a/layout/build/nsLayoutModule.cpp
+++ b/layout/build/nsLayoutModule.cpp
@@ -31,16 +31,20 @@
  * use your version of this file under the terms of the MPL, indicate your
  * decision by deleting the provisions above and replace them with the notice
  * and other provisions required by the GPL or the LGPL. If you do not delete
  * the provisions above, a recipient may use your version of this file under
  * the terms of any one of the MPL, the GPL or the LGPL.
  *
  * ***** END LICENSE BLOCK ***** */
 
+#ifdef MOZ_IPC
+#include "base/basictypes.h"
+#endif
+
 #include "xpcmodule.h"
 #include "nsLayoutStatics.h"
 #include "nsContentCID.h"
 #include "nsContentDLF.h"
 #include "nsContentPolicyUtils.h"
 #include "nsDataDocumentContentPolicy.h"
 #include "nsNoDataProtocolContentPolicy.h"
 #include "nsDOMCID.h"
