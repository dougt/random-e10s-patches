diff -r 1b80c3d9412f gfx/thebes/public/gfxQtPlatform.h
--- a/gfx/thebes/public/gfxQtPlatform.h	Tue Apr 06 15:02:54 2010 -0400
+++ b/gfx/thebes/public/gfxQtPlatform.h	Tue Apr 06 22:38:09 2010 +0300
@@ -53,18 +53,16 @@ class FontEntry;
 #endif
 
 class THEBES_API gfxQtPlatform : public gfxPlatform {
 public:
 
     enum RenderMode {
         /* Use QPainter surfaces */
         RENDER_QPAINTER = 0,
-        /* Use Xlib surface to render and wrap as QPixmap */
-        RENDER_XLIB,
         /* Use image surfaces and XShmPutImage to QPixmap */
         RENDER_SHARED_IMAGE,
         /* max */
         RENDER_MODE_MAX
     };
 
     gfxQtPlatform();
     virtual ~gfxQtPlatform();
diff -r 1b80c3d9412f gfx/thebes/src/gfxQtPlatform.cpp
--- a/gfx/thebes/src/gfxQtPlatform.cpp	Tue Apr 06 15:02:54 2010 -0400
+++ b/gfx/thebes/src/gfxQtPlatform.cpp	Tue Apr 06 22:38:09 2010 +0300
@@ -118,37 +118,33 @@ gfxQtPlatform::gfxQtPlatform()
     gPrefFonts->Init(100);
     gCodepointsWithNoFonts = new gfxSparseBitSet();
     UpdateFontList();
 #endif
 
     nsresult rv;
     PRInt32 ival;
     // 0 - default gfxQPainterSurface
-    // 1 - gfxXlibSurface
-    // 2 - gfxImageSurface
+    // 1 - gfxImageSurface
     nsCOMPtr<nsIPrefBranch> prefs = do_GetService(NS_PREFSERVICE_CONTRACTID, &rv);
     if (prefs) {
       rv = prefs->GetIntPref("mozilla.widget-qt.render-mode", &ival);
       if (NS_FAILED(rv))
           ival = DEFAULT_RENDER_MODE;
     }
 
     const char *envTypeOverride = getenv("MOZ_QT_RENDER_TYPE");
     if (envTypeOverride)
         ival = atoi(envTypeOverride);
 
     switch (ival) {
         case 0:
             mRenderMode = RENDER_QPAINTER;
             break;
         case 1:
-            mRenderMode = RENDER_XLIB;
-            break;
-        case 2:
             mRenderMode = RENDER_SHARED_IMAGE;
             break;
         default:
             mRenderMode = RENDER_QPAINTER;
     }
 }
 
 gfxQtPlatform::~gfxQtPlatform()
diff -r 1b80c3d9412f widget/src/qt/nsWindow.cpp
--- a/widget/src/qt/nsWindow.cpp	Tue Apr 06 15:02:54 2010 -0400
+++ b/widget/src/qt/nsWindow.cpp	Tue Apr 06 22:38:09 2010 +0300
@@ -242,26 +242,16 @@ UpdateOffScreenBuffers(QSize aSize, int 
     }
 
     gBufferMaxSize.setWidth(PR_MAX(gBufferMaxSize.width(), size.width));
     gBufferMaxSize.setHeight(PR_MAX(gBufferMaxSize.height(), size.height));
     gBufferPixmap = new QPixmap(gBufferMaxSize.width(), gBufferMaxSize.height());
     if (!gBufferPixmap)
         return false;
 
-    if (gfxQtPlatform::GetPlatform()->GetRenderMode() == gfxQtPlatform::RENDER_XLIB) {
-        if (!gBufferPixmap->handle()) {
-            NS_ERROR("XDrawable must be available for QPixmap in RENDER_XLIB mode");
-            delete gBufferPixmap;
-            gBufferPixmap = nsnull;
-            return false;
-        }
-        return true;
-    }
-
     // Check if system depth has related gfxImage format
     gfxASurface::gfxImageFormat format =
         _depth_to_gfximage_format(gBufferPixmap->x11Info().depth());
 
     gNeedColorConversion = (format == gfxASurface::ImageFormatUnknown);
 
     gBufferImage = new gfxSharedImageSurface();
     if (!gBufferImage) {
@@ -986,30 +976,16 @@ is_mouse_in_window (MozQWidget* aWindow,
 
 NS_IMETHODIMP
 nsWindow::GetAttention(PRInt32 aCycleCount)
 {
     LOG(("nsWindow::GetAttention [%p]\n", (void *)this));
     return NS_ERROR_NOT_IMPLEMENTED;
 }
 
-#ifdef MOZ_X11
-static already_AddRefed<gfxASurface>
-GetSurfaceForQWidget(QPixmap* aDrawable)
-{
-    gfxASurface* result =
-        new gfxXlibSurface(aDrawable->x11Info().display(),
-                           aDrawable->handle(),
-                           (Visual*)aDrawable->x11Info().visual(),
-                           gfxIntSize(aDrawable->size().width(), aDrawable->size().height()));
-    NS_IF_ADDREF(result);
-    return result;
-}
-#endif
-
 nsEventStatus
 nsWindow::DoPaint(QPainter* aPainter, const QStyleOptionGraphicsItem* aOption)
 {
     if (mIsDestroyed) {
         LOG(("Expose event on destroyed window [%p] window %p\n",
              (void *)this, mWidget));
         return nsEventStatus_eIgnore;
     }
@@ -1031,19 +1007,17 @@ nsWindow::DoPaint(QPainter* aPainter, co
 
     gfxQtPlatform::RenderMode renderMode = gfxQtPlatform::GetPlatform()->GetRenderMode();
     // Prepare offscreen buffers if RenderMode Xlib or Image
     if (renderMode != gfxQtPlatform::RENDER_QPAINTER)
         if (!UpdateOffScreenBuffers(QSize(r.width(), r.height()), QX11Info().depth()))
             return nsEventStatus_eIgnore;
 
     nsRefPtr<gfxASurface> targetSurface = nsnull;
-    if (renderMode == gfxQtPlatform::RENDER_XLIB) {
-        targetSurface = GetSurfaceForQWidget(gBufferPixmap);
-    } else if (renderMode == gfxQtPlatform::RENDER_SHARED_IMAGE) {
+    if (renderMode == gfxQtPlatform::RENDER_SHARED_IMAGE) {
         targetSurface = gNeedColorConversion ? gBufferImageTemp->getASurface()
                                              : gBufferImage->getASurface();
     } else if (renderMode == gfxQtPlatform::RENDER_QPAINTER) {
         targetSurface = new gfxQPainterSurface(aPainter);
     }
 
     if (NS_UNLIKELY(!targetSurface))
         return nsEventStatus_eIgnore;
@@ -2173,20 +2147,16 @@ nsWindow::GetThebesSurface()
      * we need a RenderingContext to measure text against.
      */
     if (mThebesSurface)
         return mThebesSurface;
 
     gfxQtPlatform::RenderMode renderMode = gfxQtPlatform::GetPlatform()->GetRenderMode();
     if (renderMode == gfxQtPlatform::RENDER_QPAINTER) {
         mThebesSurface = new gfxQPainterSurface(gfxIntSize(1, 1), gfxASurface::CONTENT_COLOR);
-    } else if (renderMode == gfxQtPlatform::RENDER_XLIB) {
-        mThebesSurface = new gfxXlibSurface(QX11Info().display(),
-                                            (Visual*)QX11Info().visual(),
-                                            gfxIntSize(1, 1), QX11Info().depth());
     }
     if (!mThebesSurface) {
         gfxASurface::gfxImageFormat imageFormat = gfxASurface::ImageFormatRGB24;
         mThebesSurface = new gfxImageSurface(gfxIntSize(1, 1), imageFormat);
     }
 
     return mThebesSurface;
 }
